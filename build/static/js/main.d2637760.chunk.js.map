{"version":3,"sources":["components/PageHeader/PageHeader.js","containers/Cuentas/CuentasApi.js","containers/Cuentas/CuentasActions.js","constants/Endpoints.js","containers/Cuentas/Cuentas.js","components/Charts/Bar/Bar.js","components/Charts/Doughnut/Doughnut.js","components/Charts/Line/Line.js","containers/Analitycs/Analitycs.js","App.js","redux/reducers/index.js","serviceWorker.js","index.js","redux/store.js"],"names":["PageHeaders","Header","Layout","className","consultaClientesApi","queryView","a","async","method","fetch","endpoint","instance","json","response","consultaClientes","Content","Cuentas","state","data","columns","loading","componentDidMount","setState","then","payload","map","item","index","push","key","cliente","numeroDeFacturasPorPagar","montoTotalPorPagar","semana1","semana2","title","dataIndex","this","style","padding","background","dataSource","bordered","pagination","position","Component","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","Barras","height","options","maintainAspectRatio","Dona","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Linea","weight","Analitycs","span","Bar","Line","Sider","App","collapsed","opcion","toggle","option","e","console","log","props","name","zIndex","width","trigger","collapsible","theme","mode","defaultSelectedKeys","onClick","type","Item","PageHeader","rootReducers","combineReducers","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","store","middlewareEnhacer","applyMiddleware","thunk","composeEnhancers","composeWithDevTools","createStore","rootReducer","configureStore","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d2637760.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout } from 'antd';\nconst PageHeaders = () => {\n\tconst { Header } = Layout;\n\treturn (\n\t\t<Header className=\"header\">\n\t\t\t<div className=\"textHeader\">CUENTAS POR COBRAR</div>\n\t\t</Header>\n\t);\n};\nexport default PageHeaders;\n","export const consultaClientesApi = async queryView => {\n\tconst method = queryView.method;\n\tconst instance = await fetch(queryView.endpoint, {\n\t\tmethod,\n\t});\n\tconst response = await instance.json();\n\treturn response;\n};\n","import { consultaClientesApi } from './CuentasApi';\nimport { CONSULTAR_CLIENTES } from './../../constants/Endpoints';\nexport const consultaClientes = async () => {\n\tconst queryView = {\n\t\tendpoint: CONSULTAR_CLIENTES,\n\t\tmethod: 'GET',\n\t};\n\treturn consultaClientesApi(queryView);\n};\n","/** CONSULTA CLIENTES */\nexport const CONSULTAR_CLIENTES =\n\t'http://www.misistema.mx/beluga/Finanzas/endpoints/cuentas/get/clientes.php';\n","import React, { Component } from 'react';\nimport { Layout, Table } from 'antd';\nimport { consultaClientes } from './CuentasActions';\nconst { Content } = Layout;\nclass Cuentas extends Component {\n\tstate = {\n\t\tdata: [],\n\t\tcolumns: [],\n\t\tloading: false,\n\t};\n\n\tcomponentDidMount = () => {\n\t\tconst { data } = this.state;\n\t\tthis.setState({\n\t\t\tloading: true,\n\t\t});\n\t\tlet columns = [\n\t\t\t{\n\t\t\t\ttitle: 'CLIENTE',\n\t\t\t\tdataIndex: 'cliente',\n\t\t\t\tkey: 'cliente',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: '# DE FACTURAS POR PAGAR',\n\t\t\t\tdataIndex: 'numeroDeFacturasPorPagar',\n\t\t\t\tkey: 'numeroDeFacturasPorPagar',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'MONTO TOTAL POR PAGAR',\n\t\t\t\tdataIndex: 'montoTotalPorPagar',\n\t\t\t\tkey: 'montoTotalPorPagar',\n\t\t\t},\n\t\t\t{ title: 'SEMANA 1', dataIndex: 'semana1', key: 'semana1' },\n\t\t\t{ title: 'SEMANA 2', dataIndex: 'semana2', key: 'semana2' },\n\t\t];\n\n\t\tconsultaClientes().then(response => {\n\t\t\tconst clientes = response.payload;\n\t\t\tclientes.map((item, index) => {\n\t\t\t\tdata.push({\n\t\t\t\t\tkey: index,\n\t\t\t\t\tcliente: item,\n\t\t\t\t\tnumeroDeFacturasPorPagar: '',\n\t\t\t\t\tmontoTotalPorPagar: '',\n\t\t\t\t\tsemana1: '',\n\t\t\t\t\tsemana2: '',\n\t\t\t\t});\n\t\t\t\treturn item;\n\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\tdata,\n\t\t\t});\n\t\t});\n\t\tthis.setState({\n\t\t\tdata,\n\t\t\tcolumns,\n\t\t\tloading: false,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { data, columns, loading } = this.state;\n\t\treturn (\n\t\t\t<Content>\n\t\t\t\t<Layout style={{ padding: '24px 24px', background: '#fff' }}>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tclassName=\"components-table-demo-nested\"\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tdataSource={data}\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tbordered\n\t\t\t\t\t\tpagination={{ position: 'top' }}\n\t\t\t\t\t/>\n\t\t\t\t</Layout>\n\t\t\t</Content>\n\t\t);\n\t}\n}\nexport default Cuentas;\n","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Card } from 'antd';\n\nconst data = {\n\tlabels: [\n\t\t'Enero',\n\t\t'Febrero',\n\t\t'Marzo',\n\t\t'Abril',\n\t\t'Mayo',\n\t\t'Junio',\n\t\t'Julio',\n\t\t'Agosto',\n\t\t'Septiembre',\n\t\t'Octubre',\n\t\t'Noviembre',\n\t\t'Diciembre',\n\t],\n\tdatasets: [\n\t\t{\n\t\t\tlabel: 'Ventas',\n\t\t\tbackgroundColor: 'rgba(156, 242, 110, 0.84)',\n\t\t\tborderColor: 'rgba(88, 215, 20, 1)',\n\t\t\tborderWidth: 2,\n\t\t\thoverBackgroundColor: 'rgba(88, 215, 20, 1)',\n\t\t\thoverBorderColor: 'rgba(88, 215, 20, 1)',\n\t\t\tdata: [\n\t\t\t\t200526,\n\t\t\t\t251000,\n\t\t\t\t190000,\n\t\t\t\t300000,\n\t\t\t\t201000,\n\t\t\t\t195000,\n\t\t\t\t210000,\n\t\t\t\t250000,\n\t\t\t\t198000,\n\t\t\t\t205000,\n\t\t\t\t183000,\n\t\t\t\t186000,\n\t\t\t],\n\t\t},\n\t],\n};\n\nconst Barras = () => {\n\treturn (\n\t\t<Card title=\"Ventas 2019\" bordered={false}>\n\t\t\t<Bar\n\t\t\t\tdata={data}\n\t\t\t\theight={100}\n\t\t\t\toptions={{\n\t\t\t\t\tmaintainAspectRatio: true,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Card>\n\t);\n};\nexport default Barras;\n","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Card } from 'antd';\n\nconst data = {\n\tlabels: ['AQUAPRIMA', 'BACARDI', 'DILTEX'],\n\tdatasets: [\n\t\t{\n\t\t\tdata: [300, 50, 100],\n\t\t\tbackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n\t\t\thoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n\t\t},\n\t],\n};\n\nconst Dona = () => {\n\treturn (\n\t\t<Card title=\"Clientes\" bordered={false}>\n\t\t\t<Doughnut data={data} height={100} />\n\t\t</Card>\n\t);\n};\nexport default Dona;\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Card } from 'antd';\n\nconst data = {\n\tlabels: [\n\t\t'Enero',\n\t\t'Febrero',\n\t\t'Marzo',\n\t\t'Abril',\n\t\t'Mayo',\n\t\t'Junio',\n\t\t'Julio',\n\t\t'Agosto',\n\t\t'Septiembre',\n\t\t'Octubre',\n\t\t'Noviembre',\n\t\t'Diciembre',\n\t],\n\tdatasets: [\n\t\t{\n\t\t\tlabel: 'Cobrado',\n\t\t\tfill: false,\n\t\t\tlineTension: 0.1,\n\t\t\tbackgroundColor: 'rgba(166, 166, 166, 0.81)',\n\t\t\tborderColor: 'rgba(0, 0, 0, 0.81)',\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tpointBorderColor: 'rgba(0, 0, 0, 0.81)',\n\t\t\tpointBackgroundColor: '#fff',\n\t\t\tpointBorderWidth: 1,\n\t\t\tpointHoverRadius: 5,\n\t\t\tpointHoverBackgroundColor: 'rgba(59, 59, 59, 0.81)',\n\t\t\tpointHoverBorderColor: 'rgba(59, 59, 59, 0.81)',\n\t\t\tpointHoverBorderWidth: 2,\n\t\t\tpointRadius: 1,\n\t\t\tpointHitRadius: 10,\n\t\t\tdata: [\n\t\t\t\t195000,\n\t\t\t\t230000,\n\t\t\t\t150000,\n\t\t\t\t250000,\n\t\t\t\t201000,\n\t\t\t\t110000,\n\t\t\t\t200000,\n\t\t\t\t260000,\n\t\t\t\t200000,\n\t\t\t\t204000,\n\t\t\t\t183000,\n\t\t\t\t200000,\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tlabel: 'Vendido',\n\t\t\tfill: false,\n\t\t\tlineTension: 0.1,\n\t\t\tbackgroundColor: 'rgba(255, 0, 0, 0.62)',\n\t\t\tborderColor: 'rgba(255, 0, 0, 0.78)',\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tpointBorderColor: 'rgba(255, 0, 0, 1)',\n\t\t\tpointBackgroundColor: '#fff',\n\t\t\tpointBorderWidth: 1,\n\t\t\tpointHoverRadius: 5,\n\t\t\tpointHoverBackgroundColor: 'rgba(255, 0, 0, 1)',\n\t\t\tpointHoverBorderColor: 'rgba(255, 0, 0, 1)',\n\t\t\tpointHoverBorderWidth: 2,\n\t\t\tpointRadius: 1,\n\t\t\tpointHitRadius: 10,\n\t\t\tdata: [\n\t\t\t\t200526,\n\t\t\t\t251000,\n\t\t\t\t190000,\n\t\t\t\t300000,\n\t\t\t\t201000,\n\t\t\t\t195000,\n\t\t\t\t210000,\n\t\t\t\t250000,\n\t\t\t\t198000,\n\t\t\t\t205000,\n\t\t\t\t183000,\n\t\t\t\t186000,\n\t\t\t],\n\t\t},\n\t],\n};\n\nconst Linea = () => {\n\treturn (\n\t\t<Card title=\"Cobranza 2019\" bordered={false}>\n\t\t\t<Line data={data} height={50} weight={300} />\n\t\t</Card>\n\t);\n};\nexport default Linea;\n","import React, { Component } from 'react';\nimport Barras from './../../components/Charts/Bar/Bar';\nimport Dona from './../../components/Charts/Doughnut/Doughnut';\nimport Linea from './../../components/Charts/Line/Line';\nimport { Row, Col } from 'antd';\n\nclass Analitycs extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col span={12}>\n\t\t\t\t\t\t<Barras />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col span={12}>\n\t\t\t\t\t\t<Dona />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t<Linea />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Analitycs;\n","import React, { Component } from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport PageHeaders from './components/PageHeader/PageHeader';\nimport Cuentas from './containers/Cuentas/Cuentas';\nimport Analitycs from './containers/Analitycs/Analitycs';\n\nimport './App.css';\nimport 'antd/dist/antd.css';\nconst { Sider, Content } = Layout;\nclass App extends Component {\n\tstate = {\n\t\tcollapsed: true,\n\t\topcion: 'tabla',\n\t};\n\n\ttoggle = () => {\n\t\tthis.setState({\n\t\t\tcollapsed: !this.state.collapsed,\n\t\t});\n\t};\n\toption = e => {\n\t\tconsole.log(e.item.props.name);\n\t\tthis.setState({\n\t\t\topcion: e.item.props.name,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { opcion } = this.state;\n\t\treturn (\n\t\t\t<Layout style={{ position: 'fixed', zIndex: 1, width: '100%', height: '100%' }}>\n\t\t\t\t<Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n\t\t\t\t\t<Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n\t\t\t\t\t\t<div className=\"collapse\" onClick={this.toggle}>\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\tclassName=\"trigger\"\n\t\t\t\t\t\t\t\ttype={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Menu.Item key=\"1\" name=\"tabla\" onClick={this.option}>\n\t\t\t\t\t\t\t<Icon type=\"table\" />\n\t\t\t\t\t\t\t<span>Control</span>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t<Menu.Item key=\"2\" name=\"analitycs\" onClick={this.option}>\n\t\t\t\t\t\t\t<Icon type=\"bar-chart\" />\n\t\t\t\t\t\t\t<span>Analitycs</span>\n\t\t\t\t\t\t</Menu.Item>\n\n\t\t\t\t\t\t<Menu.Item key=\"3\" name=\"upload\" onClick={this.option}>\n\t\t\t\t\t\t\t<Icon type=\"upload\" />\n\t\t\t\t\t\t\t<span>Agregar Facturas</span>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</Menu>\n\t\t\t\t</Sider>\n\t\t\t\t<Layout>\n\t\t\t\t\t<PageHeaders />\n\t\t\t\t\t<Content>\n\t\t\t\t\t\t{opcion === 'tabla' && <Cuentas />}\n\t\t\t\t\t\t{opcion === 'analitycs' && <Analitycs />}\n\t\t\t\t\t</Content>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nconst rootReducers = combineReducers({\n\t\n});\n\nexport default rootReducers;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","/* eslint-disable global-require */\n/* eslint-disable import/no-extraneous-dependencies */\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nexport default function configureStore() {\n\tconst middlewares = [];\n\n\tif (process.env.NODE_ENV === 'development') {\n\t\tconst { logger } = require(`redux-logger`);\n\t\tmiddlewares.push(logger);\n\t}\n\n\tconst middlewareEnhacer = applyMiddleware(thunk, ...middlewares);\n\tconst composeEnhancers = composeWithDevTools(middlewareEnhacer);\n\n\tconst store = createStore(rootReducer, {}, composeEnhancers);\n\n\tif (module.hot) {\n\t\tmodule.hot.accept('./reducers/', () => {\n\t\t\tconst nextReducer = require('./reducers/index').default;\n\t\t\tstore.replaceReducer(nextReducer);\n\t\t});\n\t}\n\n\treturn store;\n}\n"],"sourceRoot":""}