{"version":3,"sources":["components/PageHeader/PageHeader.js","containers/Confirmacion/Confirmacion.js","App.js","redux/reducers/index.js","serviceWorker.js","index.js","redux/store.js"],"names":["PageHeaders","style","border","color","title","subTitle","Content","DatePicker","RangePicker","Input","Group","Layout","NestedTable","data2","columns","dataIndex","key","render","layout","Item","label","addonBefore","size","showTime","format","defaultValue","moment","placeholder","bordered","dataSource","renderItem","item","index","children","status","data","i","push","base","cliente","unidad","operador","grupo","disel","casetas","alimentos","transito","maniobras","comision","precio","className","expandedRowRender","tramo","destino","distancia","fecha","tiempo","observaciones","pagination","Confirmacion","padding","background","Component","App","PageHeader","rootReducers","combineReducers","Boolean","window","location","hostname","match","store","middlewareEnhacer","applyMiddleware","thunk","composeEnhancers","composeWithDevTools","createStore","rootReducer","configureStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a59f0681.chunk.js","sourcesContent":["import React from 'react';\nimport { PageHeader } from 'antd';\nconst PageHeaders = () => {\n\treturn (\n\t\t<PageHeader\n\t\t\tstyle={{\n\t\t\t\tborder: '1px solid rgb(235, 237, 240)',\n\t\t\t\tcolor: '#fffff',\n\t\t\t}}\n\t\t\ttitle=\"Operaciones\"\n\t\t\tsubTitle=\"confirmacion\"\n\t\t/>\n\t);\n};\nexport default PageHeaders;\n","import React, { Component } from 'react';\nimport { Input, Layout, Table, Badge, List, DatePicker, Form } from 'antd';\nimport moment from 'moment';\nconst { RangePicker } = DatePicker;\nconst InputGroup = Input.Group;\nconst { Content } = Layout;\nconst NestedTable = () => {\n\tconst expandedRowRender = () => {\n\t\tconst columns = [\n\t\t\t{ title: 'Tramo', dataIndex: 'tramo', key: 'tramo' },\n\t\t\t{ title: 'Destino', dataIndex: 'destino', key: 'destino' },\n\t\t\t{ title: 'Distancia', dataIndex: 'distancia', key: 'distancia' },\n\t\t\t{ title: 'Fecha', dataIndex: 'fecha', key: 'fecha' },\n\t\t\t{ title: 'Tiempo', dataIndex: 'tiempo', key: 'tiempo' },\n\t\t\t{ title: 'Observaciones', dataIndex: 'observaciones', key: 'observaciones' },\n\t\t\t{\n\t\t\t\ttitle: 'Status',\n\t\t\t\tkey: 'state',\n\t\t\t\trender: () => (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<Badge status=\"warning\" />\n\t\t\t\t\t\tPendiente\n\t\t\t\t\t</span>\n\t\t\t\t),\n\t\t\t},\n\t\t];\n\n\t\tconst data = [];\n\t\tfor (let i = 0; i < 3; ++i) {\n\t\t\tdata.push({\n\t\t\t\tkey: i,\n\t\t\t\ttramo: i + 1,\n\t\t\t\tdestino: 'Guadalajara, Jalisco, México',\n\t\t\t\tdistancia: '513 km',\n\t\t\t\tfecha: '2014-12-24 23:12:00',\n\t\t\t\ttiempo: '8 Horas 50 minutos',\n\t\t\t\tobservaciones: 'Ruta 405 del día 16/01',\n\t\t\t});\n\t\t}\n\t\treturn <Table columns={columns} dataSource={data} pagination={false} />;\n\t};\n\tconst data2 = ['Monterrey', 'Guadalajara', 'Tamaulipas'];\n\tconst columns = [\n\t\t{ title: 'Base', dataIndex: 'base', key: 'base' },\n\t\t{ title: 'Cliente', dataIndex: 'cliente', key: 'cliente' },\n\t\t{ title: 'Unidad', dataIndex: 'unidad', key: 'unidad' },\n\t\t{ title: 'Operador', dataIndex: 'operador', key: 'operador' },\n\t\t{\n\t\t\ttitle: 'Fechas',\n\t\t\tkey: 'fechas',\n\t\t\trender: () => (\n\t\t\t\t<Form layout=\"inline\">\n\t\t\t\t\t<Form.Item label=\"Carga\">\n\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\taddonBefore=\"Entrega\"\n\t\t\t\t\t\t\tsize=\"default\"\n\t\t\t\t\t\t\tshowTime\n\t\t\t\t\t\t\tformat=\"YYYY-MM-DD HH:mm\"\n\t\t\t\t\t\t\tdefaultValue={moment('2020-01-01 12:30', 'YYYY-MM-DD HH:mm')}\n\t\t\t\t\t\t\tplaceholder=\"Start\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t\t<Form.Item label=\"Entrega\">\n\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\tsize=\"default\"\n\t\t\t\t\t\t\tshowTime\n\t\t\t\t\t\t\tformat=\"YYYY-MM-DD HH:mm\"\n\t\t\t\t\t\t\tdefaultValue={moment('2020-01-01 20:30', 'YYYY-MM-DD HH:mm')}\n\t\t\t\t\t\t\tplaceholder=\"End\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Form>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttitle: 'Destinos',\n\t\t\tkey: 'destino',\n\t\t\trender: () => (\n\t\t\t\t<span>\n\t\t\t\t\t<List\n\t\t\t\t\t\tbordered\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tdataSource={data2}\n\t\t\t\t\t\trenderItem={(item, index) => <List.Item>{item}</List.Item>}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t),\n\t\t},\n\t\t{ title: 'Precio', dataIndex: 'precio', key: 'precio' },\n\t\t{\n\t\t\ttitle: 'Grupo',\n\t\t\tdataIndex: 'grupo',\n\t\t\tkey: 'grupo',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Gastos',\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Disel',\n\t\t\t\t\tdataIndex: 'disel',\n\t\t\t\t\tkey: 'disel',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Casetas',\n\t\t\t\t\tdataIndex: 'casetas',\n\t\t\t\t\tkey: 'casetas',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Alimentos',\n\t\t\t\t\tdataIndex: 'alimentos',\n\t\t\t\t\tkey: 'alimentos',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Transito',\n\t\t\t\t\tdataIndex: 'transito',\n\t\t\t\t\tkey: 'transito',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Maniobras',\n\t\t\t\t\tdataIndex: 'maniobras',\n\t\t\t\t\tkey: 'maniobras',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Comision',\n\t\t\t\t\tdataIndex: 'comision',\n\t\t\t\t\tkey: 'comision',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\ttitle: 'Status',\n\t\t\tkey: 'state',\n\t\t\trender: () => (\n\t\t\t\t<span>\n\t\t\t\t\t<Badge status=\"warning\" />\n\t\t\t\t\tPendiente\n\t\t\t\t</span>\n\t\t\t),\n\t\t},\n\t];\n\n\tconst data = [];\n\tfor (let i = 0; i < 3; ++i) {\n\t\tdata.push({\n\t\t\tkey: i,\n\t\t\tbase: 'Naucalpan',\n\t\t\tcliente: 'DILTEX',\n\t\t\tunidad: 'GF6000-1 Ejes: 2',\n\t\t\toperador: 'Abraham Sanchez Machuca',\n\t\t\tgrupo: 'LOCAL C',\n\t\t\tdisel: 2160,\n\t\t\tcasetas: 2000,\n\t\t\talimentos: 160,\n\t\t\ttransito: 0,\n\t\t\tmaniobras: 0,\n\t\t\tcomision: 600,\n\t\t\tprecio: 50000,\n\t\t});\n\t}\n\treturn (\n\t\t<Table\n\t\t\tclassName=\"components-table-demo-nested\"\n\t\t\tcolumns={columns}\n\t\t\texpandedRowRender={expandedRowRender}\n\t\t\tdataSource={data}\n\t\t/>\n\t);\n};\n\nclass Confirmacion extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Content>\n\t\t\t\t<Layout style={{ padding: '24px 24px', background: '#fff' }}>\n\t\t\t\t\t<NestedTable />\n\t\t\t\t</Layout>\n\t\t\t</Content>\n\t\t);\n\t}\n}\nexport default Confirmacion;\n","import React, { Component, Fragment } from 'react';\nimport { Layout } from 'antd';\nimport PageHeaders from './components/PageHeader/PageHeader';\nimport Confirmacion from './containers/Confirmacion/Confirmacion';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Layout>\n\t\t\t\t\t<PageHeaders />\n\t\t\t\t\t<Confirmacion />\n\t\t\t\t</Layout>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nconst rootReducers = combineReducers({\n\t\n});\n\nexport default rootReducers;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable global-require */\n/* eslint-disable import/no-extraneous-dependencies */\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nexport default function configureStore() {\n\tconst middlewares = [];\n\n\tif (process.env.NODE_ENV === 'development') {\n\t\tconst { logger } = require(`redux-logger`);\n\t\tmiddlewares.push(logger);\n\t}\n\n\tconst middlewareEnhacer = applyMiddleware(thunk, ...middlewares);\n\tconst composeEnhancers = composeWithDevTools(middlewareEnhacer);\n\n\tconst store = createStore(rootReducer, {}, composeEnhancers);\n\n\tif (module.hot) {\n\t\tmodule.hot.accept('./reducers/', () => {\n\t\t\tconst nextReducer = require('./reducers/index').default;\n\t\t\tstore.replaceReducer(nextReducer);\n\t\t});\n\t}\n\n\treturn store;\n}\n"],"sourceRoot":""}